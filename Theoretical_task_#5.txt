Задание 5

1.	Что такое Тест план?
	Тест-план (test plan) — документ, описывающий и регламентирующий перечень работ по тестированию, а также соответствующие техники и подходы, стратегию, области ответственности, ресурсы, расписание и ключевые даты.

2.	Что должен описывать тест план?
	В общем случае тест-план включает следующие разделы:
	Цель (purpose). Предельно краткое описание цели разработки приложения (частично это напоминает бизнес-требования, но здесь информация подаётся в ещё более сжатом виде и в контексте того, на что следует обращать первостепенное внимание при организации тестирования и повышения качества).
	Области, подвергаемые тестированию (features to be tested). Перечень функций и/или нефункциональных особенностей приложения, которые будут 
подвергнуты тестированию. В некоторых случаях здесь также приводится приоритет соответствующей области.
	Области, не подвергаемые тестированию (features not to be tested). Перечень функций и/или нефункциональных особенностей приложения, которые 
не будут подвергнуты тестированию. Причины исключения той или иной области из списка тестируемых могут быть самыми различными — от предельно низкой их важности для заказчика до нехватки времени или иных ресурсов. Этот перечень составляется, чтобы у проектной команды и иных заинтересованных лиц было чёткое единое понимание, что тестирование таких-то особенностей приложения не запланировано — такой подход позволяет исключить появление ложных ожиданий и неприятных сюрпризов.
	Тестовая стратегия (test strategy) и подходы (test approach). Описание процесса тестирования с точки зрения применяемых методов, подходов, видов тестирования, технологий, инструментальных средств и т.д.
	Критерии (criteria). Этот раздел включает следующие подразделы:
		Приёмочные критерии, критерии качества (acceptance criteria) — любые объективные показатели качества, которым разрабатываемый продукт должен соответствовать с точки зрения заказчика или пользователя, чтобы считаться готовым к эксплуатации.
		Критерии начала тестирования (entry criteria) — перечень условий, при выполнении которых команда приступает к тестированию. Наличие этого критерия страхует команду от бессмысленной траты усилий в условиях, когда тестирование не принесёт ожидаемой пользы.
		Критерии приостановки тестирования (suspension criteria) — перечень условий, при выполнении которых тестирование приостанавливается. Наличие этого критерия также страхует команду от бессмысленной траты усилий в условиях, когда тестирование не принесёт ожидаемой пользы.
		Критерии возобновления тестирования (resumption criteria) — перечень условий, при выполнении которых тестирование возобновляется (как правило, после приостановки).
		Критерии завершения тестирования (exit criteria) — перечень условий, при выполнении которых тестирование завершается. Наличие этого критерия страхует команду как от преждевременного прекращения тестирования, так и от продолжения тестирования в условиях, когда оно уже перестаёт приносить ощутимый эффект.
	Ресурсы (resources). В данном разделе тест-плана перечисляются все необходимые для успешной реализации стратегии тестирования ресурсы, которые в общем случае можно разделить на:
	 	 — программные ресурсы (какое ПО необходимо команде тестировщиков, сколько копий и с какими лицензиями (если речь идёт о коммерческом ПО));
		 — аппаратные ресурсы (какое аппаратное обеспечение, в каком количестве и к какому моменту необходимо команде тестировщиков);
		 — o человеческие ресурсы (сколько специалистов какого уровня и со знаниями в каких областях должно подключиться к команде тестировщиков в тот или иной момент времени);
		 — o временные ресурсы (сколько по времени займёт выполнение тех или 
иных работ);
		 — o финансовые ресурсы (в какую сумму обойдётся использование имеющихся или получение недостающих ресурсов, перечисленных в предыдущих пунктах этого списка); во многих компаниях финансовые ресурсы могут быть представлены отдельным документом, т.к. являются конфиденциальной информацией.
	Расписание (test schedule). Фактически это календарь, в котором указано, что и к какому моменту должно быть сделано. Особое внимание уделяется т.н. «ключевым точкам» (milestones), к моменту наступления которых должен быть получен некий значимый ощутимый результат.
	Роли и ответственность (roles and responsibility). Перечень необходимых ролей (например, «ведущий тестировщик», «эксперт по оптимизации производительности») и область ответственности специалистов, выполняющих эти роли.
	Оценка рисков (risk evaluation). Перечень рисков, которые с высокой вероятностью могут возникнуть в процессе работы над проектом. По каждому риску даётся оценка представляемой им угрозы и приводятся варианты выхода из ситуации.
	Документация (documentation). Перечень используемой тестовой документации с указанием, кто и когда должен её готовить и кому передавать.
	Метрики (metrics). Числовые характеристики показателей качества, способы их оценки, формулы и т.д. На этот раздел, как правило, формируется 
множество ссылок из других разделов тест-плана.

3.	Какие вы знаете Виды тест планов?
	Виды тест-планов:
	Мастер Тест-План (Master Test Plan): “Главный план тестирования (master test plan, project test plan): План тестирования, обычно охватывающий несколько уровней тестирования.” (ISTQB). Это может быть как единственный базовый план, так и главный в иерархии нескольких планов, самый статичный и высокоуровневый. Нужен когда:
продукт имеет множество релизов или итераций, между которыми сохраняется общая информация, которую нет смысла повторять;
различные тестовые команды работают над одним продуктом, выполняя различные задачи, которые необходимо объединить в рамках одного документа;
	Детальный Тест-план (Phase Test plan): “Уровневый план тестирования (level test plan): План тестирования, обычно относящийся к одному уровню тестирования.” (ISTQB). Детальный план составляется на каждый релиз/итерацию или для каждой команды в рамках проекта и является динамическим, т.е. може 
	План приемочных испытаний (Acceptance Test Plan, ПСИ): план приемочного тестирования отличают от обычного плана тестирования факторы, которые приводят к принятию бизнес-решения. План приемочного тестирования - это один из жизненно важных документов, который содержит руководство по выполнению приемочного тестирования для конкретного проекта. Пишется на основе бизнес-требований (Business Requirements). Ревью этого плана обычно выполняется by Managers/Business Analysts/Customers.

4.	Что такое Чек лист?
ек-лист (checklist) — набор идей [тест-кейсов]. Последнее слово не зря взято в скобки, т.к. в общем случае чек-лист — это просто набор идей: идей по тестированию, идей по разработке, идей по планированию и управлению — любых идей.

5.	Перечислите возможные атрибуты Чек листа
 — Атрибуты чек-листа могут варьироваться в зависимости от его конкретного применения. Вот несколько возможных атрибутов, которые могут быть включены в чек-лист:
 — Название: идентифицирующее название или заголовок для чек-листа.
 — Описание: краткое описание целей или контекста, в котором будет использоваться чек-лист.
 — Элементы для проверки: конкретные задачи, действия или проверки, которые должны быть выполнены или проведены.
 — Порядок выполнения: указание на то, есть ли определенный порядок выполнения задач или они могут быть выполнены в любом удобном порядке.
 — Статус выполнения: поле для отметки о выполнении каждой задачи (например, "выполнено", "не выполнено", "в процессе").
 — Планируемая дата завершения: дата, к которой каждая задача должна быть выполнена.
 — Приоритет: уровень важности или срочности каждой задачи.
 — Ответственные лица: информация о том, кто отвечает за выполнение каждой задачи.
 — Комментарии и пояснения: возможность добавления комментариев, пояснений или справочной информации к каждой задаче.
 — Прикрепленные файлы: возможность прикрепления файлов или документов, необходимых для выполнения каждой задачи.
 — Категории или разделы: разбиение чек-листа на разделы или категории для удобства навигации.
 — Повторяющиеся задачи: указание на то, какие задачи должны быть выполнены регулярно или по расписанию.
 — Дата и время выполнения: возможность отметить дату и время фактического выполнения каждой задачи.
 — Архивирование и аудит: возможность сохранения выполненных чек-листов для последующего аудита или отчетности.
 — Помните, что использование всех этих атрибутов или их комбинаций зависит от конкретных потребностей и целей вашего чек-листа.

6.	Перечислите варианты статусов при прохождении Чек листа
	При прохождении чек-листа, статусы могут служить для отметки текущего состояния или результата выполнения каждой конкретной задачи или всего чек-листа в целом. Вот несколько вариантов статусов, которые могут использоваться при прохождении чек-листа:
 — Выполнено: задача успешно выполнена.
 — Не выполнено: задача не была выполнена или была выполнена неудовлетворительно.
 — В процессе: выполнение задачи в настоящее время находится в процессе выполнения.
 — Отложено: задача была временно приостановлена и будет выполнена в будущем.
 — Требует доработки: задача выполнена, но требует дальнейшей доработки или коррекции.
 — Отменено: задача была отменена по каким-либо причинам.
 — В ожидании: задача ожидает начала выполнения по какой-то причине, например, ожидание каких-либо ресурсов или решения вопросов.
 — Проверено: задача была пройдена и проверена на соответствие заданным критериям или стандартам.
 — Заблокировано: задача не может быть выполнена из-за каких-либо блокирующих факторов.
 — Возникли проблемы: при выполнении задачи возникли проблемы, которые требуют дальнейшего рассмотрения или решения.
Кроме того, статусы могут быть индивидуально настраиваемыми в зависимости от конкретных потребностей процесса или задач, выполняемых с помощью чек-листа.

7.	Что такое Тест кейс?
Тест-кейс (test case) — набор входных данных, условий выполнения и ожидаемых результатов, разработанный с целью проверки того или иного свойства или поведения программного средства.
Под тест-кейсом также может пониматься соответствующий документ, представляющий формальную запись тест-кейса

8.	Перечислите атрибуты Тест кейса?
 — Идентификатор тест-кейса: Уникальный идентификатор, который помогает отслеживать и ссылаться на конкретный тест-кейс в рамках системы управления тестами.
 — Название тест-кейса: Описательное название, которое точно и кратко описывает то, что будет тестироваться.
 — Описание: Полное описание того, что будет тестироваться и какие функциональные требования подлежат проверке.
 — Предусловия: Любые условия, которые должны быть выполнены перед выполнением тест-кейса, например, определенное состояние системы, данные или конфигурация.
 — Шаги выполнения: Последовательность шагов, которые тестирующий должен выполнить, чтобы протестировать определенное поведение программного обеспечения.
 — Входные данные: Любые данные или параметры, которые необходимы для выполнения тестовых шагов.
 — Ожидаемый результат: Четкое описание того, что ожидается после выполнения каждого шага, включая ожидаемые результаты, сообщения об ошибках или поведение системы.
 — Фактический результат: Поле для ввода реальных результатов выполнения тест-кейса после его проведения.
 — Статус: Отметка о том, был ли тест-кейс успешно выполнен, провален или требует доработки.
 — Приоритет: Уровень важности тест-кейса относительно других. Это помогает определить, какие тест-кейсы следует выполнить в первую очередь.
 — Среда: Информация о том, на какой среде (операционная система, версия браузера и т. д.) и под какими условиями проводилось тестирование.
 — Создатель/ответственный: Информация о лице, ответственном за создание и поддержание тест-кейса.
Эти атрибуты помогают обеспечить полное и точное тестирование функциональности программного обеспечения.

9.	Перечислите виды Тест кейсов?
 — Позитивные тест-кейсы: Тесты, которые проверяют, что система работает так, как ожидается, когда ей передаются правильные данные и условия. Они проверяют ожидаемое поведение системы при корректном использовании.
 — Негативные тест-кейсы: Тесты, которые проверяют, как система реагирует на неправильные данные и условия. Они оценивают, как система обрабатывает ошибочные вводы или недопустимые сценарии.
 — Интеграционные тест-кейсы: Тесты, направленные на проверку взаимодействия между различными компонентами системы или между самим приложением и его окружением.
 — Системные тест-кейсы: Тесты, которые проверяют функциональность системы как целого. Они могут включать в себя тестирование основных функций, производительности, нагрузки и т. д.
 — Автоматизированные тест-кейсы: Тесты, которые разработаны для автоматизации и интеграции в процессы непрерывной интеграции и поставки.
 — Регрессионные тест-кейсы: Тесты, направленные на проверку того, что изменения в коде или конфигурации не повлияли на уже работающий функционал.
 — Тест-кейсы безопасности: Тесты, которые оценивают уровень безопасности программного обеспечения и его устойчивость к различным видам атак.
 — Тест-кейсы производительности: Тесты, которые проверяют, насколько хорошо система обрабатывает нагрузку и как быстро выполняет определенные операции.

10.	Что такое Тестовый набор (Test Suite)?
	Тестовый набор (Test Suite) представляет собой набор тестов, которые группируются вместе для выполнения определенной цели, обычно для тестирования определенных функциональных аспектов программного обеспечения или для проверки определенных сценариев использования.
	Когда приложение или система разрастается, тестирование отдельных частей по-отдельности становится недостаточным. Тестовый набор позволяет сгруппировать несколько тестов в более крупные единицы, чтобы их можно было запускать сразу, а также для удобной организации их соответствующим образом.
	Это позволяет упростить запуск и организацию тестов, особенно когда их количество становится очень большим. Тестовые наборы используются для управления и запуска целых групп тестов, что упрощает автоматизацию процесса тестирования.
	Кроме того, с помощью тестовых наборов можно организовать тесты на различные уровни, от модульных до интеграционных и системных, и предоставлять удобный способ запуска всех тестов, связанных с определенной функциональностью или сценарием.
	Обычно тестовые наборы создаются для конкретных целей тестирования. Например, для отдельного модуля, для регрессионного тестирования, для производительности и т.д.

11.	Что такое Баг репорт?
	Отчёт о дефекте (defect report) — документ, описывающий и приоритизирующий обнаруженный дефект, а также содействующий его устранению.

12.	Какое нужно соблюдать правило в баг репорте для хорошего Summary?

13.	Перечислите атрибуты Баг репорта?
	Идентификатор:  уникальный номер отчета. Присваивается автоматически в багтрекинговой системе (BTS, bug tracking system) 
	Краткое описание (summary): отвечает на три вопроса: что, где, когда?  Что произошло? Где это произошло? При каких условиях?
	Подробное описание (description): информация о дефекте в развернутом виде + фактический и ожидаемый результат + ссылка на требование
	Шаги по воспроизведению (steps to reproduce, STR) 
	Окружение (environment): информация о среде, на которой был обнаружен баг (версия ОС, браузера, мобильного устройства)
	Важность (severity) - степень ущерба, который наносится проекту существованием дефекта. Серьезность для разрабатываемого ПО.	
	Срочность (priority) показывает, как быстро дефект должен быть устранён.
	Комментарий (comments, additional info) дополнительные данные о дефекте, возможность упомянуть исполнителя
	Вложения (attachments) подтверждение дефекта: фото, видео, логи, тестовые данные, архивы и так далее
	Также в дефектах обычно есть следующие поля:
		 — Статус в жизненном цикле
		 — Информация об исполнителе
		 — Ссылки на связанные артефакты

14.	Опишите Жизненный цикл бага
	Обнаружен (submitted) — начальное состояние отчёта (иногда называется «Новый» (new)), в котором он находится сразу после создания. Некоторые средства также позволяют сначала создавать черновик (draft) и лишь потом публиковать отчёт.
	Назначен (assigned) — в это состояние отчёт переходит с момента, когда ктото из проектной команды назначается ответственным за исправление дефекта. Назначение ответственного производится или решением лидера команды разработки, или коллегиально, или по добровольному принципу, или иным принятым в команде способом или выполняется автоматически на основе определённых правил
	Исправлен (fixed) — в это состояние отчёт переводит ответственный за исправление дефекта член команды после выполнения соответствующих действий по исправлению
	Проверен (verified) — в это состояние отчёт переводит тестировщик, удостоверившийся, что дефект на самом деле был устранён. Как правило, такую проверку выполняет тестировщик, изначально написавший отчёт о дефекте.
	Закрыт (closed) — состояние отчёта, означающее, что по данному дефекту не планируется никаких дальнейших действий (хотя, конечно, ничто не мешает в будущем этому дефекту стать «открытым заново» (reopened)). 
	Рекомендован к отклонению (to be declined) — в это состояние отчёт о дефекте может быть переведён из множества других состояний с целью вынести на рассмотрение вопрос об отклонении отчёта по той или иной причине. Если рекомендация является обоснованной, отчёт переводится в состояние «Отклонён» (см. следующий пункт).
	Отклонён (declined) — в это состояние отчёт переводится в случаях, подробно описанных в пункте «Закрыт», если средство управления отчётами о дефектах предполагает использование этого состояния вместо состояния «Закрыт» для тех или иных резолюций по отчёту.
Отложен (deferred) — в это состояние отчёт переводится в случае, если исправление дефекта в ближайшее время является нерациональным или не представляется возможным, однако есть основания полагать, что в обозримом будущем ситуация исправится (выйдет новая версия библиотеки, вернётся из отпуска специалист по некоей технологии, изменятся требования заказчика и т.д.).

15.	Что такое Priority?
Срочность (priority) показывает, как быстро дефект должен быть устранён.

16.	Перечислите классификации Priority
 — Наивысшая (ASAP, as soon as possible) срочность указывает на необходимость устранить дефект настолько быстро, насколько это возможно.
 — Высокая (high) срочность означает, что дефект следует исправить вне очереди, т.к. его существование или уже объективно мешает работе, или начнёт создавать такие помехи в самом ближайшем будущем.
— Обычная (normal) срочность означает, что дефект следует исправить в порядке общей очерёдности. Такое значение срочности получает большинство дефектов.
— Низкая (low) срочность означает, что в обозримом будущем исправление данного дефекта не окажет существенного влияния на повышение качества продукта.

17.	Что такое Severity?
	Важность (severity) - степень ущерба, который наносится проекту существованием дефекта. Серьезность для разрабатываемого ПО.
18.	Перечислите классификации  Severity
 — Критическая (critical) — существование дефекта приводит к масштабным последствиям катастрофического характера
— Высокая (major) — существование дефекта приносит ощутимые неудобства многим пользователям в рамках их типичной деятельности
— Средняя (medium) — существование дефекта слабо влияет на типичные сценарии работы пользователей, и/или существует обходной путь достижения цели
 — Низкая (minor) — существование дефекта редко обнаруживается незначительным процентом пользователей и (почти) не влияет на их работу 
19.	Приведите пример Низкого Priority и Высокого Severity
функция генерации годового отчета, которая будет использована только через полгода
20.	Приведите пример Низкого Severity и Высокого Priority
опечатки в контактных данных

21.	Что такое Матрица соответствия требований (Requirements Traceability Matrix)?Матрица трассируемости (traceability matrix, RTM) - двумерная таблица, описывающая связь двух сущностей (например, требований и тестовых сценариев). Таблица позволяет производить прямую и обратную трассировку от одной сущности к другой, обеспечивая таким образом возможность определения покрытия и оценки влияния предполагаемых изменений. [ISTQB Glossary]
Базовая матрица служит для визуальной оценки тестового покрытия, где указаны требования и тест-кейсы, проверяющие их.
На пересечение ставится метка, благодаря которой можно принять решение об оптимизации количества кейсов для проверки требования.

22.	Что такое Тест-отчет?

23.	По времени Тест отчет на сколько типов возможно разделить?

24.	Что должен показывать Промежуточный отчет?

25.	Что должен показывать Итоговый отчет?
