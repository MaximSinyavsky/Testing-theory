Задание 6

1.	Что такое Ошибка/Дефект/Отказ?
	Ошибка (Bug): В разработке программного обеспечения "ошибка" обычно относится к ошибке в коде, которая приводит к неправильной функциональности программы. Это может быть результатом опечатки, неправильной логики, неверного предположения или других проблем в коде. Когда разработчики находят ошибку, они должны исправить ее, чтобы программа работала корректно.
	Дефект (Defect): Термин "дефект" часто используется в процессе тестирования программного обеспечения. Дефект возникает, когда программа или система не соответствует спецификациям или ожиданиям пользователя. Дефект может быть как результатом ошибки в коде (бага), так и проектировочного или функционального недочета. Когда тестировщики обнаруживают дефект, они документируют его и отслеживают процесс исправления.
	Отказ (Failure): "Отказ" обычно используется для описания некорректной работы программы в реальной среде. Когда программа не выполняет свои функции или делает это неправильно, это считается отказом. Отказ может произойти из-за наличия дефектов или ошибок, приведенных в коде программы. Отказ может также быть вызван внешними факторами, такими как аппаратные сбои, неправильные действия пользователей и другие.
2.	Перечислите Основные типы багов?

3.	Перечислите “Хитрые баги”?
	Хитрые баги (tricky bugs) – это те, которые сложно обнаружить, воспроизвести и исправить. Они часто приводят к неожиданным и сложным последствиям в работе программы. Вот несколько примеров:
	Гонка данных (Race Condition):
Пример - Одновременный доступ к общим ресурсам. В многопоточном приложении один поток пытается читать данные, в то время как другой поток пытается записать данные в то же самое место. Это может вызвать ошибки чтения или записи, потерю данных и другие непредсказуемые последствия.
	Недетерминированное поведение:
Пример - Приложение дает разные результаты при одних и тех же входных данных в разное время из-за зависимостей от внешних факторов или неочевидных состояний.
	Подвисание (Deadlock):
Пример - Два или более процесса блокируют друг друга, ожидая ресурсы, которые удерживают другие процессы.
	Утечка ресурсов (Resource Leak):
Пример - Забытые указатели, открытые файлы или выделенная память, которые больше не используются, но не были освобождены. Это может привести к исчерпанию ресурсов системы.
	Скрытая ошибка в бизнес-логике:
Пример - Ошибка в расчетах, которая может проявиться только в специфических условиях, например, при определенной последовательности операций, неявных предположениях о данных и т. д.
	Решение таких проблем обычно требует глубокого понимания кода, тщательного тестирования различных сценариев использования и изучения логов для выявления скрытых взаимосвязей.

4.	Приведите пример Blocker bug
	"Blocker bug" - это термин, используемый в разработке программного обеспечения для обозначения критической ошибки, которая препятствует нормальной работе системы. Такие ошибки могут быть серьёзным препятствием для продолжения разработки или использования программного продукта. Вот пример "blocker bug":
	Предположим, у веб-приложения для онлайн-торговли обнаруживается ошибка, из-за которой пользователи не могут завершить процесс оплаты. Даже после ввода всех данных оплаты и подтверждения покупки, пользователи получают сообщение об ошибке и платеж не проходит. Это могло бы быть классифицировано как "blocker bug", потому что оно непосредственно влияет на ключевую функциональность приложения, препятствует завершению транзакций и, таким образом, препятствует основной цели приложения – совершению покупок.
	Команда разработки немедленно займется этой проблемой, поскольку она негативно влияет на бизнес и пользователей. Обычно такие проблемы имеют высокий приоритет и рассматриваются как неотложные для решения.

5.	Приведите пример Critical bug
	"Critical bug" - это термин, который обычно используется для обозначения серьезной ошибки в программном обеспечении, которая может привести к серьезным последствиям, таким как потеря данных, системный сбой или угроза безопасности.
	В медицинской информационной системе существует ошибка, из-за которой результаты анализов пациентов периодически перепутываются, что может привести к неправильному назначению лечения. Это критическая ошибка, так как она прямо влияет на здоровье пациентов и может иметь серьезные медицинские последствия.
	Команда разработки и ИТ-специалисты должны тут же приступить к идентификации и устранению этой проблемы, поскольку она может привести к непоправимым последствиям и имеет прямое отношение к здоровью и благополучию людей.

6.	Приведите пример Major bug
	"Major bug" - это термин, обозначающий значительную ошибку в программном обеспечении, которая может вызвать серьезное нарушение функциональности, но, в отличие от critical bug, не представляет угрозы для безопасности или жизненно важных функций.
	В веб-приложении для онлайн-покупок скидка в 50% автоматически применяется ко всем товарам в корзине, независимо от их типа или бренда. Это приводит к значительным потерям прибыли для компании, поскольку скидка не должна автоматически применяться к определенным товарам или брендам. Этот дефект серьезно влияет на финансовые показатели компании, но не представляет угрозы для безопасности или жизненно важных функций.
	Для решения данной проблемы команда разработки и техническая поддержка должны провести тщательное тестирование и исправить это поведение, чтобы избежать потерь прибыли и обеспечить правильную работу системы онлайн-продаж.
Исправление major bug является важным, поскольку оно напрямую влияет на опыт пользователей и финансовую устойчивость компании, но не требует немедленной реакции, как это случается с critical bug.

7.	Приведите пример Minor bug
	Минорная ошибка (minor bug) обычно является незначительным дефектом в программном обеспечении, который не приводит к серьезным нарушениям работы системы и не влияет на ее ключевую функциональность. Вот пример такой ошибки:
	В текстовом редакторе неверно отображается количество слов в документе в случае, если в тексте присутствуют знаки препинания и специальные символы. Например, при наличии апострофов или дефисов количество слов может быть неверно посчитано. Хотя это может быть раздражающим, особенно для людей, которые работают с текстом, это не представляет критической проблемы и не влияет на возможность сохранения и редактирования документов.
	Для решения такой ошибки команда разработки может рассмотреть оптимизацию алгоритма подсчёта слов в тексте и обновить соответствующий функционал без причинения значительных помех в общей работоспособности программы.

8.	Приведите пример Trivial bug
	Trivial bug (мелкая ошибка) обычно представляет собой наименее значимый тип дефекта в программном обеспечении. Вот пример такой ошибки:
	В текстовом редакторе в подменю "Стиль" встречается опечатка – вместо "Курсив" написано "Курсивв". Это незначительная опечатка в пользовательском интерфейсе, которая не влияет на возможность пользователей изменять форматирование текста в документах.
	Для решения такой ошибки команда разработки может просто обновить текст в пользовательском интерфейсе без внесения каких-либо изменений в программную логику, поскольку эта опечатка не влияет на общее функционирование программы.

9.	Какой жизненный цикл Bug report?

10.	Какие основные цели локализации дефекта?

11.	Где могут находиться дефекты?

12.	Перечислите методы локализации дефекта в клиентской части.

13.	Перечислите методы локализации дефекта в серверной части.

