Задание 2

	1.	Что такое проект?
— совокупность мероприятий для разработки нового продукта или улучшения существующего продукта.
	2.	Из каких этапов состоит Waterfall model/Каскадная модель?
— Сбор и анализ требований: Определение требований к системе и документирование их.
— Дизайн системы: Создание архитектуры и дизайна программного продукта.
— Реализация: Непосредственная разработка программного кода.
— Тестирование: Проверка программного обеспечения на соответствие требованиям.
— Развертывание: Выпуск продукта в эксплуатацию.
— Поддержка и обслуживание: Решение возникающих проблем и обновление продукта.
	3.	Какие преимущества и недостатки Waterfall model/Каскадной модели?
+У каждой стадии есть чёткий проверяемый результат;
+ В каждый момент времени команда выполняет один вид работы;
+Хорошо работает для небольших задач;
— Полная неспособность адаптировать проект к изменениям в требованиях;
— Крайне позднее создание работающего продукта.
	4.	Из каких этапов состоит V-model/V- модель?
—  Общее планирование.
—  Пользовательские требования: Установление требований к продукту.
—  Системные требования: Разработка архитектуры системы.
—  Техническая архитектура: Разработка архитектуры компонентов.
—  Модульное проектирование: Детализация проектирования компонентов.
—  Разработка и отладка: Реализация проекта в коде.
—  Интеграция и модульное тестирование: Тестирование отдельных компонентов.
—  Интеграционное тестирование: Тестирование взаимодействия компонентов.
—  Системное тестирование: Тестирование системы в целом.
—  Приемочное тестирование: Проверка соответствия требованиям заказчика.
—  Итоговая отчетность.
	5.	Когда использовать V-model/V- модель?
— В проектах, в которых существуют временные и финансовые ограничения;
— Для задач, которые предполагают более широкое, по сравнению с каскадной моделью, тестовое покрытие.
	6.	Из каких этапов состоит Iterative model/Итеративная модель?
— Планирование + требования
— Архитектура и дизайн
— Разработка и отладка
— Интеграция и модульные тесты
— Установка билда
— Тестирование
— Оценка результатов
— Отчётность
	7.	Когда использовать Iterative model/Итеративной модели?
Итерационная инкрементальная модель очень хорошо зарекомендовала себя на объемных и сложных проектах, выполняемых большими командами на протяжении длительных сроков. Однако к основным недостаткам этой модели часто относят высокие накладные расходы, вызванные высокой «бюрократизированностью» и общей громоздкостью модели.
	8.	Плюсы и минусы Iterative model/Итеративной модели?
+Достаточно раннее прототипирование;
+Простота управления итерациями;
+Декомпозиция проекта на управляемые итерации;
 — Недостаточная гибкость внутри итераций;
— Сложность устранения проблем, пропущенных на ранних стадиях развития проекта.
	9.	Agile - это?
— это комплексная методика организации процесса разработки ПО, которая включает в себя целую семью отдельных подходов, или, как их еще называют, фреймворков (Scrum, Kanban, Lean, DSDM, XP, FDD, Crystal). Она использует итеративный подход к управлению проектами и разработке ПО, что позволяет командам ускорить и организовать процесс.
	10.	Agile манифест - это?
— основополагающий документ, в котором кратко описаны ценности и принципы, лежащие в основе этих методологий.
	11.	Какие ценности Agile манифест?
— Люди и взаимодействие важнее процессов и инструментов.
— Работающий продукт важнее исчерпывающей документации.
— Сотрудничество с заказчиком важнее согласования условий контракта.
— Готовность к изменениям важнее следования первоначальному плану.
	12.	Основные принципы Agile манифест?
— Наивысшим приоритетом для нас является удовлетворение потребностей заказчика, благодаря регулярной и ранней поставке ценного программного обеспечения
Главное для Agile-команды — удовлетворенность клиентов, поэтому они обязательно представляют результаты своей работы через регулярные промежутки времени, а не заставляют заказчиков ждать финального результата в конце проекта.
— Изменение требований приветствуется даже на поздних стадиях разработки. Agile-процессы позволяют использовать изменения для обеспечения конкурентного преимущества заказчика
В этом их преимущество перед традиционными командами, которым обычно не так легко управлять изменениями.
— Работающий продукт следует выпускать как можно чаще, с периодичностью от двух недель до двух месяцев
Вспомним, что Agile-команды ценят постоянное общение, а не жестко распланированный выпуск обновлений, которые могут слишком далеко отстоять друг от друга по времени, что может оказаться неприемлемым для клиентов. Команды Scrum, которые тоже работают по методологии Agile, разбивают свою работу на периоды от одной до четырех недель, известные, как спринты.
— На протяжении всего проекта разработчики и представители бизнеса должны ежедневно работать вместе
Сотрудничество — краеугольный камень Agile, причем имеется в виду не только сотрудничество между членами команды, но и сотрудничество с заинтересованными сторонами, разработчиками, клиентами и другими партнерами.
— Над проектом должны работать мотивированные профессионалы. Чтобы работа была сделана, создайте им условия, обеспечьте поддержку — и полностью им доверьтесь
Agile-команды успешны, потому что в них работают только те люди, которые необходимы для проекта. Если участники Agile-команды получат поддержку, возможность работать вместе и инструменты, необходимые для работы, все остальное приложится.
— Непосредственное общение — наиболее практичный и эффективный способ обмена информацией как с самой командой, так и внутри команды
Все мы знаем, что главное в управлении проектами — личное сотрудничество. Этот принцип применим и во времена «новой нормы», при гибридных и удаленных моделях работы. Zoom и Teams — отличная альтернатива телефонным звонкам и электронной почте, а в ключевых точках проекта возможны и личные встречи команд.
— Работающий продукт — основной показатель прогресса
Смысл принципа, который называет работающий продукт основным показателем прогресса, в том, что главная цель команды всегда остается одна — предоставить клиенту как можно более высококачественный результат. Когда клиент доволен, это и есть главный показатель успеха проекта.
— Agile помогает наладить устойчивый процесс разработки. Инвесторы, разработчики и пользователи должны иметь возможность бесконечно поддерживать постоянный ритм Многие команды поначалу показывают бурный прогресс, который не получается сохранить до конца проекта.
— Постоянное внимание к техническому совершенству и качеству проектирования повышает гибкость проекта
Agile не работает по принципу «раз — и готово». Каждый новый проект — это возможность для инноваций, а не для повтора одних и тех же идей.
— Простота как искусство сократить до минимума лишнюю работу крайне необходима
Команды Agile не занимаются переусложнением — они просто соблюдают проектные требования и хорошо выполняют свою работу, а затем переходят к следующему проекту.
— Самые лучшие требования, архитектурные и технические решения рождаются у самоорганизующихся команд
Лучшие команды — это те команды, у которых есть лидер, предоставляющий им свободу самовыражения. Микроменеджмент редко делает команды лучше или продуктивнее, и Agile-команды — отличный пример того, чего можно добиться без микроменеджмента.
— Команда должна систематически анализировать возможные способы улучшения эффективности и соответственно корректировать стиль своей работы
Непрерывное совершенствование — сама суть Agile, и регулярные проверки эффективности команды в целом могут помочь избавиться от вредных привычек и добиваться бо́льшего.
	13.	Scrum - это? (опишите подробно)
— наиболее популярный Agile-фреймворк, для многих людей эти термины являются синонимами. Scrum - это фреймворк процесса, используемый для управления разработкой продукта и другой работой, связанной с знаниями. Скрам является эмпирическим в том смысле, что дает командам возможность установить гипотезу о том, как они думают, что что-то работает, опробовать это, проанализировать полученный опыт и внести соответствующие коррективы. То есть при правильном использовании фреймворка. Скрам структурирован таким образом, чтобы команды могли использовать практики из других фреймворков, которые имеют смысл для контекста команды.
Scrum лучше всего подходит в случае, когда кросс-функциональная команда работает в среде разработки продукта, где есть нетривиальный объем работы, которую можно разделить на более чем одну 2-4-недельную итерацию.
	Ценности:
— Преданность (Commitment): Члены команды лично привержены достижению целей команды;
— Смелость (Courage): Члены команды поступают правильно и работают над сложными проблемами;
— Сфокусированность (Focus): Сконцентрируйтесь на работе, намеченной для спринта, и целях команды;
— Открытость (Openness): Члены команды и заинтересованные стороны открыто рассказывают обо всей работе и проблемах, с которыми сталкивается команда;
— Уважение (Respect): Члены команды уважают друг друга за способности и независимость.
	Принципы:
— Прозрачность (Transparency): Команда должна работать в среде, где каждый знает, с какими проблемами сталкиваются другие члены команды. Команды выявляют проблемы внутри организации, часто возникающие в течение длительного времени, которые мешают успеху команды;
— Инспекция (Inspection): Частые контрольные точки встроены в структуру, чтобы дать команде возможность поразмышлять о том, как работает процесс. Эти контрольные точки включают в себя Daily Scrum meeting и the Sprint Review Meeting;
— Адаптация (Adaptation): Команда постоянно изучает, как идут дела, и проверяет те пункты, которые кажутся бессмысленными.
	14.	Что такое Velocity / Capacity?

	15.	Преимущества и недостатки Scrum

	16.	Что такое ретроспектива?

	17.	Kanban- это? (опишите подробно)

	18.	Преимущества и недостатки Kanban?

	19.	Что такое SDLS? Из каких этапов состоит? Что происходит на каждом этапе?

	20.	Что такое STLS? Из каких этапов состоит? Что происходит на каждом этапе?
